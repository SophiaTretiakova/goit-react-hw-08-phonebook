{"version":3,"file":"static/js/299.6f2dfbf5.chunk.js","mappings":"uQAEaA,EAAaC,EAAAA,GAAAA,KAAH,uGAOVC,EAAQD,EAAAA,GAAAA,MAAH,8CAILE,EAASF,EAAAA,GAAAA,OAAH,yC,mBCLbG,EAAaC,EAAAA,GAAW,CAC5BC,KAAMD,EAAAA,KACHE,SAAS,4BACTC,QACC,yHAHE,+DAMNC,MAAOJ,EAAAA,KACJE,SAAS,6BACTC,QAAQ,kCAFJ,eAGPE,SAAUL,EAAAA,KAAaE,SAAS,kCAwDlC,EArDqB,WACnB,IAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CAAET,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDM,iBAAkBZ,EAClBa,SAAU,SAAAC,GACRP,GAASQ,EAAAA,EAAAA,IAASD,IAClBE,QAAQC,IAAIH,EACb,IAEH,OACE,UAAClB,EAAD,CAAYiB,SAAUJ,EAAOS,aAA7B,WACE,SAACpB,EAAD,WACE,SAACqB,EAAA,EAAD,CACEC,GAAG,OACHC,MAAOZ,EAAOK,OAAOZ,KACrBoB,MAAM,OACNpB,KAAK,OACLqB,KAAK,OACLC,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQzB,MAAQ0B,QAAQnB,EAAOoB,OAAO3B,MACpD4B,WAAYrB,EAAOkB,QAAQzB,MAAQO,EAAOoB,OAAO3B,UAGrD,SAACJ,EAAD,WACE,SAACqB,EAAA,EAAD,CACEC,GAAG,QACHC,MAAOZ,EAAOK,OAAOT,MACrBiB,MAAM,SACNpB,KAAK,QACLqB,KAAK,QACLC,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQtB,OAASuB,QAAQnB,EAAOoB,OAAOxB,OACrDyB,WAAYrB,EAAOkB,QAAQtB,OAASI,EAAOoB,OAAOxB,WAGtD,SAACP,EAAD,WACE,SAACqB,EAAA,EAAD,CACEY,aAAa,KACbR,KAAK,WACLrB,KAAK,WACLoB,MAAM,WACND,MAAOZ,EAAOK,OAAOR,SACrBkB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQrB,UAAYsB,QAAQnB,EAAOoB,OAAOvB,UACxDwB,WAAYrB,EAAOkB,QAAQrB,UAAYG,EAAOoB,OAAOvB,cAGzD,SAACP,EAAD,CAAQwB,KAAK,SAAb,uBAGL,C","sources":["pages/RegisterForm.styled.js","pages/RegisterForm.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const StyledForm = styled.form`\n  padding: 20px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  font-weight: bold;\n`;\n\nexport const Button = styled.button`\n  width: 222px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { StyledForm, Label, Button } from './RegisterForm.styled';\nimport { TextField } from '@mui/material';\n\nconst userSchema = Yup.object({\n  name: Yup.string()\n    .required('Name is a required field')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      `Name may contain only letters, apostrophe, dash and spaces.`\n    ),\n  email: Yup.string()\n    .required('Email is a required field')\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, `Wrong email`),\n  password: Yup.string().required('Password is a required field'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: { name: '', email: '', password: '' },\n    validationSchema: userSchema,\n    onSubmit: values => {\n      dispatch(register(values));\n      console.log(values);\n    },\n  });\n  return (\n    <StyledForm onSubmit={formik.handleSubmit}>\n      <Label>\n        <TextField\n          id=\"name\"\n          value={formik.values.name}\n          label=\"Name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n      </Label>\n      <Label>\n        <TextField\n          id=\"email\"\n          value={formik.values.email}\n          label=\"E-mail\"\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n      </Label>\n      <Label>\n        <TextField\n          autoComplete=\"on\"\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n      </Label>\n      <Button type=\"submit\">Sign Up</Button>\n    </StyledForm>\n  );\n};\n\nexport default RegisterForm;\n"],"names":["StyledForm","styled","Label","Button","userSchema","Yup","name","required","matches","email","password","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","register","console","log","handleSubmit","TextField","id","value","label","type","onChange","handleChange","error","touched","Boolean","errors","helperText","autoComplete"],"sourceRoot":""}