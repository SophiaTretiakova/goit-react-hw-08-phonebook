{"version":3,"file":"static/js/299.86df2176.chunk.js","mappings":"uQAEaA,EAAaC,EAAAA,GAAAA,KAAH,uGAOVC,EAAQD,EAAAA,GAAAA,MAAH,8CAILE,EAASF,EAAAA,GAAAA,OAAH,yC,mBCLbG,EAAaC,EAAAA,GAAW,CAC5BC,KAAMD,EAAAA,KACHE,SAAS,4BACTC,QACC,yHAHE,+DAMNC,MAAOJ,EAAAA,KACJE,SAAS,6BACTC,QAAQ,kCAFJ,eAGPE,SAAUL,EAAAA,KAAaE,SAAS,kCA0DlC,EAvDqB,WACnB,IAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CAAET,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDM,iBAAkBZ,EAClBa,SAAU,SAAAC,GACRP,GAASQ,EAAAA,EAAAA,IAASD,GACnB,IAEH,OACE,iCACE,mDACA,UAAClB,EAAD,CAAYiB,SAAUJ,EAAOO,aAA7B,WACE,SAAClB,EAAD,WACE,SAACmB,EAAA,EAAD,CACEC,GAAG,OACHC,MAAOV,EAAOK,OAAOZ,KACrBkB,MAAM,OACNlB,KAAK,OACLmB,KAAK,OACLC,SAAUb,EAAOc,aACjBC,MAAOf,EAAOgB,QAAQvB,MAAQwB,QAAQjB,EAAOkB,OAAOzB,MACpD0B,WAAYnB,EAAOgB,QAAQvB,MAAQO,EAAOkB,OAAOzB,UAGrD,SAACJ,EAAD,WACE,SAACmB,EAAA,EAAD,CACEC,GAAG,QACHC,MAAOV,EAAOK,OAAOT,MACrBe,MAAM,SACNlB,KAAK,QACLmB,KAAK,QACLC,SAAUb,EAAOc,aACjBC,MAAOf,EAAOgB,QAAQpB,OAASqB,QAAQjB,EAAOkB,OAAOtB,OACrDuB,WAAYnB,EAAOgB,QAAQpB,OAASI,EAAOkB,OAAOtB,WAGtD,SAACP,EAAD,WACE,SAACmB,EAAA,EAAD,CACEY,aAAa,KACbR,KAAK,WACLnB,KAAK,WACLkB,MAAM,WACND,MAAOV,EAAOK,OAAOR,SACrBgB,SAAUb,EAAOc,aACjBC,MAAOf,EAAOgB,QAAQnB,UAAYoB,QAAQjB,EAAOkB,OAAOrB,UACxDsB,WAAYnB,EAAOgB,QAAQnB,UAAYG,EAAOkB,OAAOrB,cAGzD,SAACP,EAAD,CAAQsB,KAAK,SAAb,0BAIP,C","sources":["pages/RegisterForm.styled.js","pages/RegisterForm.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const StyledForm = styled.form`\n  padding: 20px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  font-weight: bold;\n`;\n\nexport const Button = styled.button`\n  width: 222px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { StyledForm, Label, Button } from './RegisterForm.styled';\nimport { TextField } from '@mui/material';\n\nconst userSchema = Yup.object({\n  name: Yup.string()\n    .required('Name is a required field')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      `Name may contain only letters, apostrophe, dash and spaces.`\n    ),\n  email: Yup.string()\n    .required('Email is a required field')\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, `Wrong email`),\n  password: Yup.string().required('Password is a required field'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: { name: '', email: '', password: '' },\n    validationSchema: userSchema,\n    onSubmit: values => {\n      dispatch(register(values));\n    },\n  });\n  return (\n    <>\n      <h1>Register your account</h1>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <Label>\n          <TextField\n            id=\"name\"\n            value={formik.values.name}\n            label=\"Name\"\n            name=\"name\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n        </Label>\n        <Label>\n          <TextField\n            id=\"email\"\n            value={formik.values.email}\n            label=\"E-mail\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n        </Label>\n        <Label>\n          <TextField\n            autoComplete=\"on\"\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n        </Label>\n        <Button type=\"submit\">Sign Up</Button>\n      </StyledForm>\n    </>\n  );\n};\n\nexport default RegisterForm;\n"],"names":["StyledForm","styled","Label","Button","userSchema","Yup","name","required","matches","email","password","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","register","handleSubmit","TextField","id","value","label","type","onChange","handleChange","error","touched","Boolean","errors","helperText","autoComplete"],"sourceRoot":""}