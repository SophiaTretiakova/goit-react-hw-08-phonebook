{"version":3,"file":"static/js/586.a81af399.chunk.js","mappings":"2NAOMA,EAAaC,EAAAA,GAAW,CAC5BC,KAAMD,EAAAA,KACHE,SAAS,4BACTC,QACC,yHAHE,+DAMNC,MAAOJ,EAAAA,KACJE,SAAS,6BACTC,QAAQ,kCAFJ,eAGPE,SAAUL,EAAAA,KAAaE,SAAS,kCAsElC,UAnEqB,WACnB,IAAMI,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CAAEP,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDI,iBAAkBV,EAClBW,SAAU,SAAAC,GACRC,QAAQC,IAAIF,GACZG,GAASC,EAAAA,EAAAA,IAASJ,GACnB,IAEGG,GAAWE,EAAAA,EAAAA,MACjB,OACE,kBACEC,UAAU,gCACVP,SAAUJ,EAAOY,aAFnB,WAIE,kBAAOD,UAAU,sBAAjB,UACE,SAAC,IAAD,CACEE,aAAa,KACbF,UAAU,2CACVG,KAAK,OACLnB,KAAK,OACLoB,MAAM,OACNC,MAAOhB,EAAOK,OAAOV,KACrBsB,SAAUjB,EAAOkB,aACjBC,OAAQnB,EAAOoB,WACfC,MAAOrB,EAAOsB,QAAQ3B,MAAQ4B,QAAQvB,EAAOwB,OAAO7B,MACpD8B,WAAYzB,EAAOsB,QAAQ3B,MAAQK,EAAOwB,OAAO7B,UAGrD,kBAAOgB,UAAU,sBAAjB,UACE,SAAC,IAAD,CACEE,aAAa,KAEbC,KAAK,QACLnB,KAAK,QACLoB,MAAM,QACNC,MAAOhB,EAAOK,OAAOP,MACrBmB,SAAUjB,EAAOkB,aACjBC,OAAQnB,EAAOoB,WACfC,MAAOrB,EAAOsB,QAAQxB,OAASyB,QAAQvB,EAAOwB,OAAO1B,OACrD2B,WAAYzB,EAAOsB,QAAQxB,OAASE,EAAOwB,OAAO1B,WAGtD,kBAAOa,UAAU,sBAAjB,UACE,SAAC,IAAD,CACEE,aAAa,KAEbC,KAAK,WACLnB,KAAK,WACLoB,MAAM,WACNC,MAAOhB,EAAOK,OAAON,SACrBkB,SAAUjB,EAAOkB,aACjBC,OAAQnB,EAAOoB,WACfC,MAAOrB,EAAOsB,QAAQvB,UAAYwB,QAAQvB,EAAOwB,OAAOzB,UACxD0B,WAAYzB,EAAOsB,QAAQvB,UAAYC,EAAOwB,OAAOzB,cAGzD,mBAEEe,KAAK,SAFP,uBAQL,C","sources":["pages/RegisterForm.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField } from '@mui/material';\n\nconst userSchema = Yup.object({\n  name: Yup.string()\n    .required('Name is a required field')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      `Name may contain only letters, apostrophe, dash and spaces.`\n    ),\n  email: Yup.string()\n    .required('Email is a required field')\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, `Wrong email`),\n  password: Yup.string().required('Password is a required field'),\n});\n\nconst RegisterForm = () => {\n  const formik = useFormik({\n    initialValues: { name: '', email: '', password: '' },\n    validationSchema: userSchema,\n    onSubmit: values => {\n      console.log(values);\n      dispatch(register(values));\n    },\n  });\n  const dispatch = useDispatch();\n  return (\n    <form\n      className=\"flex flex-col w-[400px] gap-4\"\n      onSubmit={formik.handleSubmit}\n    >\n      <label className=\"flex flex-col gap-1\">\n        <TextField\n          autoComplete=\"on\"\n          className=\"border-slate-400 border-2 rounded-md p-2\"\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n      </label>\n      <label className=\"flex flex-col gap-1\">\n        <TextField\n          autoComplete=\"on\"\n          // className=\"border-slate-400 border-2 rounded-md p-2\"\n          type=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n      </label>\n      <label className=\"flex flex-col gap-1\">\n        <TextField\n          autoComplete=\"on\"\n          // className=\"border-slate-400 border-2 rounded-md p-2\"\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n      </label>\n      <button\n        // className=\"w-[100px] bg-slate-400 rounded-lg p-2 text-white hover:bg-slate-600\"\n        type=\"submit\"\n      >\n        Sign Up\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"],"names":["userSchema","Yup","name","required","matches","email","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","console","log","dispatch","register","useDispatch","className","handleSubmit","autoComplete","type","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText"],"sourceRoot":""}