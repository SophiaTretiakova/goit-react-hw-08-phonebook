{"version":3,"file":"static/js/997.df4d6dcc.chunk.js","mappings":"2NAOMA,EAAaC,EAAAA,GAAW,CAC5BC,MAAOD,EAAAA,KACJE,SAAS,6BACTC,QAAQ,kCAFJ,eAGPC,SAAUJ,EAAAA,KAAaE,SAAS,kCAwDlC,UArDkB,WAChB,IAAMG,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CAAEN,MAAO,GAAIG,SAAU,IACtCI,iBAAkBT,EAClBU,SAAU,SAAAC,GACRC,GAASC,EAAAA,EAAAA,IAAMF,GAChB,IAGGC,GAAWE,EAAAA,EAAAA,MACjB,OACE,kBAEEJ,SAAUJ,EAAOS,aAFnB,WAIE,kBAAOC,UAAU,sBAAjB,UACE,SAAC,IAAD,CACEC,aAAa,KAEbC,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,MAAOf,EAAOK,OAAOT,MACrBoB,SAAUhB,EAAOiB,aACjBC,OAAQlB,EAAOmB,WACfC,MAAOpB,EAAOqB,QAAQzB,OAAS0B,QAAQtB,EAAOuB,OAAO3B,OACrD4B,WAAYxB,EAAOqB,QAAQzB,OAASI,EAAOuB,OAAO3B,WAGtD,kBAAOc,UAAU,sBAAjB,UACE,SAAC,IAAD,CACEC,aAAa,KAEbC,KAAK,WACLC,KAAK,WACLC,MAAM,WACNC,MAAOf,EAAOK,OAAON,SACrBiB,SAAUhB,EAAOiB,aACjBC,OAAQlB,EAAOmB,WACfC,MAAOpB,EAAOqB,QAAQtB,UAAYuB,QAAQtB,EAAOuB,OAAOxB,UACxDyB,WAAYxB,EAAOqB,QAAQtB,UAAYC,EAAOuB,OAAOxB,cAGzD,mBAEEa,KAAK,SAFP,sBAQL,C","sources":["pages/LogInForm.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField } from '@mui/material';\n\nconst userSchema = Yup.object({\n  email: Yup.string()\n    .required('Email is a required field')\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, `Wrong email`),\n  password: Yup.string().required('Password is a required field'),\n});\n\nconst LogInForm = () => {\n  const formik = useFormik({\n    initialValues: { email: '', password: '' },\n    validationSchema: userSchema,\n    onSubmit: values => {\n      dispatch(logIn(values));\n    },\n  });\n\n  const dispatch = useDispatch();\n  return (\n    <form\n      // className=\"flex flex-col w-[400px] gap-4\"\n      onSubmit={formik.handleSubmit}\n    >\n      <label className=\"flex flex-col gap-1\">\n        <TextField\n          autoComplete=\"on\"\n          // className=\"border-slate-400 border-2 rounded-md p-2\"\n          type=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n      </label>\n      <label className=\"flex flex-col gap-1\">\n        <TextField\n          autoComplete=\"on\"\n          // className=\"border-slate-400 border-2 rounded-md p-2\"\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n      </label>\n      <button\n        // className=\"w-[100px] bg-slate-400 rounded-lg p-2 text-white hover:bg-slate-600\"\n        type=\"submit\"\n      >\n        Log In\n      </button>\n    </form>\n  );\n};\n\nexport default LogInForm;\n"],"names":["userSchema","Yup","email","required","matches","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","dispatch","logIn","useDispatch","handleSubmit","className","autoComplete","type","name","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText"],"sourceRoot":""}