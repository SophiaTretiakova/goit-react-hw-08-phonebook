{"version":3,"file":"static/js/997.6e8bb694.chunk.js","mappings":"2NAOMA,EAAaC,EAAAA,GAAW,CAC5BC,MAAOD,EAAAA,KACJE,SAAS,6BACTC,QAAQ,kCAFJ,eAGPC,SAAUJ,EAAAA,KAAaE,SAAS,kCA8ClC,UA3CkB,WAChB,IAAMG,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CAAEN,MAAO,GAAIG,SAAU,IACtCI,iBAAkBT,EAClBU,SAAU,SAAAC,GACRC,GAASC,EAAAA,EAAAA,IAAMF,GAChB,IAGGC,GAAWE,EAAAA,EAAAA,MACjB,OACE,kBAAMJ,SAAUJ,EAAOS,aAAvB,WACE,4BACE,SAAC,IAAD,CACEC,aAAa,KACbC,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,MAAOd,EAAOK,OAAOT,MACrBmB,SAAUf,EAAOgB,aACjBC,OAAQjB,EAAOkB,WACfC,MAAOnB,EAAOoB,QAAQxB,OAASyB,QAAQrB,EAAOsB,OAAO1B,OACrD2B,WAAYvB,EAAOoB,QAAQxB,OAASI,EAAOsB,OAAO1B,WAGtD,4BACE,SAAC,IAAD,CACEc,aAAa,KACbC,KAAK,WACLC,KAAK,WACLC,MAAM,WACNC,MAAOd,EAAOK,OAAON,SACrBgB,SAAUf,EAAOgB,aACjBC,OAAQjB,EAAOkB,WACfC,MAAOnB,EAAOoB,QAAQrB,UAAYsB,QAAQrB,EAAOsB,OAAOvB,UACxDwB,WAAYvB,EAAOoB,QAAQrB,UAAYC,EAAOsB,OAAOvB,cAGzD,mBAAQY,KAAK,SAAb,sBAGL,C","sources":["pages/LogInForm.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField } from '@mui/material';\n\nconst userSchema = Yup.object({\n  email: Yup.string()\n    .required('Email is a required field')\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, `Wrong email`),\n  password: Yup.string().required('Password is a required field'),\n});\n\nconst LogInForm = () => {\n  const formik = useFormik({\n    initialValues: { email: '', password: '' },\n    validationSchema: userSchema,\n    onSubmit: values => {\n      dispatch(logIn(values));\n    },\n  });\n\n  const dispatch = useDispatch();\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label>\n        <TextField\n          autoComplete=\"on\"\n          type=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n      </label>\n      <label>\n        <TextField\n          autoComplete=\"on\"\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n      </label>\n      <button type=\"submit\">Log In</button>\n    </form>\n  );\n};\n\nexport default LogInForm;\n"],"names":["userSchema","Yup","email","required","matches","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","dispatch","logIn","useDispatch","handleSubmit","autoComplete","type","name","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText"],"sourceRoot":""}